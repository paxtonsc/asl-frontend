{"version":3,"sources":["logo.svg","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Header","AppBar","Toolbar","useStyles","makeStyles","root","padding","header","video","height","window","innerWidth","paper","margins","type","alignItems","justifyContent","grid","display","App","classes","useState","predictions","setPredictions","havePred","setHavePred","className","Grid","container","spacing","item","xs","Paper","constraints","audio","onRecordingComplete","videoBlob","console","log","URL","createObjectURL","formData","FormData","file","File","append","fetch","method","body","then","response","json","data","align","Typography","variant","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAAe,I,4BCGA,SAASA,IAKtB,OACE,iCACE,cAACC,EAAA,EAAD,UALK,cAACC,EAAA,EAAD,0C,uDCKLC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,aAEXC,OAAQ,CACND,QAAS,aAEXE,MAAO,CACLC,OAAQC,OAAOC,WAAW,EAC1BL,QAAS,aAEXM,MAAO,CACLH,OAAQ,OACRH,QAAS,YACTO,QAAS,WAEXC,KAAM,CACJC,WAAY,OACZC,eAAgB,QAElBC,KAAM,CACJC,QAAS,UAuEEC,MAjEf,WACE,IAAMC,EAAUjB,IAChB,EAAsCkB,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAGA,OACE,sBAAKC,UAAWN,EAAQf,KAAxB,UACE,qBAAKqB,UAAWN,EAAQb,OAAxB,SACE,cAACP,EAAD,MAGF,eAAC2B,EAAA,EAAD,CAAMD,UAAWN,EAAQH,KAAMW,WAAS,EAACC,QAAS,EAAlD,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAON,UAAWN,EAAQZ,MAA1B,SACE,cAAC,IAAD,CACEyB,YAAa,CACXC,OAAO,EACP1B,OAAO,GAET2B,oBAAqB,SAAAC,GACnBC,QAAQC,IAAIC,IAAIC,gBAAgBJ,IAChC,IAAMK,EAAW,IAAIC,SACfC,EAAO,IAAIC,KAAK,CAACR,GAAY,gBAAiB,CAClDtB,KAAM,cAER2B,EAASI,OAAO,OAAQF,GACxBG,MAAM,GAAD,OAxDL,+BAwDK,gBAA2B,CAC9BC,OAAQ,OACRC,KAAMP,IAEPQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACLf,QAAQC,IAAIc,GACZ7B,EAAe6B,GACf3B,GAAY,aAMtB,cAACE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,8BACGP,EACD,8BACE,eAACQ,EAAA,EAAD,CAAON,UAAWN,EAAQR,MAAOyC,MAAM,OAAvC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAA/B,4BACA,eAACF,EAAA,EAAD,CAAYC,QAAQ,KAApB,iBAA8BjC,EAAY,GAA1C,OACA,eAACgC,EAAA,EAAD,CAAYC,QAAQ,KAApB,iBAA8BjC,EAAY,GAA1C,OACA,eAACgC,EAAA,EAAD,CAAYC,QAAQ,KAApB,iBAA8BjC,EAAY,GAA1C,OACA,eAACgC,EAAA,EAAD,CAAYC,QAAQ,KAApB,iBAA8BjC,EAAY,GAA1C,OACA,eAACgC,EAAA,EAAD,CAAYC,QAAQ,KAApB,iBAA8BjC,EAAY,GAA1C,YAEK,wCC9ENmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.701403f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { AppBar, Toolbar } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function Header() {\n  const displayDesktop = () => {\n    return <Toolbar>CS 231N ASL Interpreter</Toolbar>;\n  };\n  \n  return (\n    <header>\n      <AppBar>{displayDesktop()}</AppBar>\n    </header>\n  );\n}","import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header'\nimport VideoRecorder from 'react-video-recorder'\nimport {Paper, Typography, Grid} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useState, useEffect} from 'react';\n\nconst BACKEND = 'http://7b708aa1b533.ngrok.io';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '10px 10px'\n  },\n  header: {\n    padding: '40px 30px',\n  },\n  video: {\n    height: window.innerWidth/2,\n    padding: '30px 30px'\n  },\n  paper: {\n    height: '100%',\n    padding: '30px 30px',\n    margins: '5px 5px',\n  },\n  type: {\n    alignItems: 'left',\n    justifyContent: 'left',\n  },\n  grid: {\n    display: 'flex',\n  }\n\n});\n\n\nfunction App() {\n  const classes = useStyles();\n  const [predictions, setPredictions] = useState({});\n  const [havePred, setHavePred] = useState(false);\n\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <Header/>\n      </div>\n      \n      <Grid className={classes.grid} container spacing={3}>\n        <Grid item xs={7}>\n          <Paper className={classes.video}>\n            <VideoRecorder\n              constraints={{\n                audio: false,\n                video: true\n              }}\n              onRecordingComplete={videoBlob => {\n                console.log(URL.createObjectURL(videoBlob));\n                const formData = new FormData();\n                const file = new File([videoBlob], 'recording.mp4', {\n                  type: 'video/mp4',\n                })\n                formData.append('file', file)\n                fetch(`${BACKEND}/post_video/`, {\n                  method: 'POST',\n                  body: formData\n                })\n                .then(response => response.json())\n                .then((data) => {\n                  console.log(data)\n                  setPredictions(data);\n                  setHavePred(true);\n                })\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={5}>\n          <div>\n            {havePred ? \n            <div> \n              <Paper className={classes.paper} align='left'>\n                <Typography variant='h4' color='primary'> Predictions: </Typography>\n                <Typography variant='h6'> 1. {predictions[1]} </Typography>\n                <Typography variant='h6'> 2. {predictions[2]} </Typography>\n                <Typography variant='h6'> 3. {predictions[3]} </Typography>\n                <Typography variant='h6'> 4. {predictions[4]} </Typography>\n                <Typography variant='h6'> 5. {predictions[5]} </Typography>\n              </Paper>\n            </div> : <></>}\n          </div>\n        </Grid>\n      </Grid>\n      \n\n    </div>\n\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}